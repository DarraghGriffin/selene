---
base: lua51
name: roblox
globals:
  Axes.new:
    args:
      - type: "..."
  BrickColor.Black:
    args: []
  BrickColor.Blue:
    args: []
  BrickColor.DarkGray:
    args: []
  BrickColor.Gray:
    args: []
  BrickColor.Green:
    args: []
  BrickColor.Red:
    args: []
  BrickColor.White:
    args: []
  BrickColor.Yellow:
    args: []
  BrickColor.new:
    args:
      - type: any
      - required: false
        type: number
      - required: false
        type: number
  BrickColor.palette:
    args:
      - type: number
  BrickColor.random:
    args: []
  CFrame.Angles:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  CFrame.fromAxisAngle:
    args:
      - type:
          display: Vector3
      - type: number
  CFrame.fromEulerAnglesXYZ:
    args:
      - type: number
      - type: number
      - type: number
  CFrame.fromEulerAnglesYXZ:
    args:
      - type: number
      - type: number
      - type: number
  CFrame.fromMatrix:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
      - type:
          display: Vector3
      - required: false
        type:
          display: Vector3
  CFrame.fromOrientation:
    args:
      - type: number
      - type: number
      - type: number
  CFrame.identity:
    property: read-only
  CFrame.lookAt:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
      - required: false
        type:
          display: Vector3
  CFrame.new:
    args:
      - required: false
        type: any
      - required: false
        type: any
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color3.fromHSV:
    args:
      - type: number
      - type: number
      - type: number
  Color3.fromHex:
    args:
      - type: string
  Color3.fromRGB:
    args:
      - type: number
      - type: number
      - type: number
  Color3.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color3.toHSV:
    args:
      - type:
          display: Color3
  ColorSequence.new:
    args:
      - type: any
      - required: false
        type:
          display: Color3
  ColorSequenceKeypoint.new:
    args:
      - type: number
      - type:
          display: Color3
  DateTime.fromIsoDate:
    args:
      - type: string
  DateTime.fromLocalTime:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  DateTime.fromUniversalTime:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  DateTime.fromUnixTimestamp:
    args:
      - type: number
  DateTime.fromUnixTimestampMillis:
    args:
      - type: number
  DateTime.now:
    args: []
  DebuggerManager:
    args: []
  DockWidgetPluginGuiInfo.new:
    args:
      - required: false
        type:
          display: InitialDockState
      - required: false
        type: bool
      - required: false
        type: bool
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Enum.GetEnums:
    args: []
    method: true
  Faces.new:
    args:
      - type: "..."
  Instance.new:
    args:
      - type: string
  NumberRange.new:
    args:
      - type: number
      - required: false
        type: number
  NumberSequence.new:
    args:
      - type: any
      - required: false
        type: number
  NumberSequenceKeypoint.new:
    args:
      - type: number
      - type: number
      - required: false
        type: number
  OverlapParams.new:
    args: []
  PathWaypoint.new:
    args:
      - required: false
        type:
          display: Vector3
      - required: false
        type:
          display: PathWaypointAction
  PhysicalProperties.new:
    args:
      - type: any
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Random.new:
    args:
      - required: false
        type: number
  Ray.new:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
  RaycastParams.new:
    args: []
  Rect.new:
    args:
      - type: any
      - type: any
      - required: false
        type: number
      - required: false
        type: number
  Region3.new:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
  Region3int16.new:
    args:
      - required: false
        type:
          display: Vector3
      - required: false
        type:
          display: Vector3
  TweenInfo.new:
    args:
      - required: false
        type: number
      - required: false
        type:
          display: EasingStyle
      - required: false
        type:
          display: EasingDirection
      - required: false
        type: number
      - required: false
        type: bool
      - required: false
        type: number
  UDim.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
  UDim2.fromOffset:
    args:
      - required: use UDim2.new() if you want an empty UDim2
        type: number
      - required: false
        type: number
  UDim2.fromScale:
    args:
      - required: use UDim2.new() if you want an empty UDim2
        type: number
      - required: false
        type: number
  UDim2.new:
    args:
      - required: false
        type: any
      - required: false
        type: any
      - required: false
        type: number
      - required: false
        type: number
  UserSettings:
    args: []
  Vector2.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
  Vector2.one:
    property: read-only
  Vector2.xAxis:
    property: read-only
  Vector2.yAxis:
    property: read-only
  Vector2.zero:
    property: read-only
  Vector2int16.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
  Vector3.FromAxis:
    args:
      - type:
          display: Axis
  Vector3.FromNormalId:
    args:
      - type:
          display: NormalId
  Vector3.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Vector3.one:
    property: read-only
  Vector3.xAxis:
    property: read-only
  Vector3.yAxis:
    property: read-only
  Vector3.zAxis:
    property: read-only
  Vector3.zero:
    property: read-only
  Vector3int16.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  bit32.arshift:
    args:
      - type: number
      - type: number
  bit32.band:
    args:
      - type: "..."
  bit32.bnot:
    args:
      - type: number
  bit32.bor:
    args:
      - type: "..."
  bit32.btest:
    args:
      - type: "..."
  bit32.bxor:
    args:
      - type: "..."
  bit32.countlz:
    args:
      - type: number
  bit32.countrz:
    args:
      - type: number
  bit32.extract:
    args:
      - type: number
      - type: number
      - required: false
        type: number
  bit32.lrotate:
    args:
      - type: number
      - type: number
  bit32.lshift:
    args:
      - type: number
      - type: number
  bit32.replace:
    args:
      - type: number
      - type: number
      - type: number
      - required: false
        type: number
  bit32.rrotate:
    args:
      - type: number
      - type: number
  bit32.rshift:
    args:
      - type: number
      - type: number
  collectgarbage:
    args:
      - type:
          - count
  coroutine.close:
    args:
      - type:
          display: thread
  coroutine.isyieldable:
    args: []
  debug.debug:
    removed: true
  debug.getfenv:
    removed: true
  debug.gethook:
    removed: true
  debug.getinfo:
    removed: true
  debug.getlocal:
    removed: true
  debug.getmetatable:
    removed: true
  debug.getregistry:
    removed: true
  debug.getupvalue:
    removed: true
  debug.info:
    args:
      - type: any
      - type: any
      - required: false
        type: string
  debug.profilebegin:
    args:
      - type: string
  debug.profileend:
    args: []
  debug.resetmemorycategory:
    args: []
  debug.setfenv:
    removed: true
  debug.sethook:
    removed: true
  debug.setlocal:
    removed: true
  debug.setmemorycategory:
    args:
      - type: string
  debug.setmetatable:
    removed: true
  debug.setupvalue:
    removed: true
  delay:
    args:
      - type: number
      - type: function
  dofile:
    removed: true
  elapsedTime:
    args: []
  error:
    args:
      - required: Erroring without an explanation is unhelpful to users.
        type: any
      - required: false
        type: number
  gcinfo:
    args: []
  io:
    removed: true
  load:
    removed: true
  loadfile:
    removed: true
  math.clamp:
    args:
      - type: number
      - type: number
      - type: number
  math.log:
    args:
      - type: number
      - required: false
        type: number
  math.noise:
    args:
      - type: number
      - required: false
        type: number
      - required: false
        type: number
  math.round:
    args:
      - type: number
  math.sign:
    args:
      - type: number
  module:
    removed: true
  os.execute:
    removed: true
  os.exit:
    removed: true
  os.getenv:
    removed: true
  os.remove:
    removed: true
  os.rename:
    removed: true
  os.setlocale:
    removed: true
  os.tmpname:
    removed: true
  package:
    removed: true
  require:
    args:
      - type: number
  settings:
    args: []
  shared:
    property: new-fields
  spawn:
    args:
      - type: function
  string.dump:
    removed: true
  string.pack:
    args:
      - type: string
      - type: "..."
  string.packsize:
    args:
      - type: string
  string.split:
    args:
      - type: string
      - required: false
        type: string
  string.unpack:
    args:
      - type: string
      - type: string
      - required: false
        type: number
  table.clear:
    args:
      - type: table
  table.clone:
    args:
      - type: table
  table.create:
    args:
      - type: number
      - required: false
        type: any
  table.find:
    args:
      - type: table
      - type: any
      - required: false
        type: number
  table.freeze:
    args:
      - type: table
  table.isfrozen:
    args:
      - type: table
  table.move:
    args:
      - type: table
      - type: number
      - type: number
      - type: number
      - required: false
        type: table
  table.pack:
    args:
      - type: "..."
  table.unpack:
    args:
      - type: table
      - required: false
        type: number
      - required: false
        type: number
  task.cancel:
    args:
      - type:
          display: thread
  task.defer:
    args:
      - type: function
      - required: false
        type: "..."
  task.delay:
    args:
      - required: false
        type: number
      - type: function
      - required: false
        type: "..."
  task.desynchronize:
    args: []
  task.spawn:
    args:
      - type: function
      - required: false
        type: "..."
  task.synchronize:
    args: []
  task.wait:
    args:
      - required: false
        type: number
  tick:
    args: []
  time:
    args: []
  typeof:
    args:
      - type: any
  utf8.char:
    args:
      - required: utf8.char should be used with an argument despite it not throwing
        type: number
      - required: false
        type: "..."
  utf8.charpattern:
    property: read-only
  utf8.codepoint:
    args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
  utf8.codes:
    args:
      - type: string
  utf8.graphemes:
    args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
  utf8.len:
    args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
  utf8.nfcnormalize:
    args:
      - type: string
  utf8.nfdnormalize:
    args:
      - type: string
  utf8.offset:
    args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
  wait:
    args:
      - required: false
        type: number
  warn:
    args:
      - type: string
      - required: false
        type: "..."
structs:
  EnumItem:
    Name:
      property: read-only
    Value:
      property: read-only
  Event:
    Connect:
      args:
        - type: function
      method: true
    Wait:
      args: []
      method: true
  Instance:
    "*":
      any: true
